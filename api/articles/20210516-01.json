{"title":"C++中的二进制技巧","uid":"ceb531fd493e11e5f90d618867a2a344","slug":"20210516-01","date":"2021-05-15T16:00:00.000Z","updated":"2021-06-16T16:00:23.182Z","comments":true,"path":"api/articles/20210516-01.json","keywords":null,"cover":"file/20210516-01.jpg","content":"<h3 id=\"判断-1\"><a href=\"#判断-1\" class=\"headerlink\" title=\"判断-1\"></a>判断-1</h3><pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">int i &#x3D; -1; \n&#x2F;&#x2F; means the binary expression of i is 111111111···11\n&#x2F;&#x2F; at the same time the &#39;~&#39; operation flip every bit of i\n&#x2F;&#x2F; then the binary expression of i is 000000000···000\nassert(~i &#x3D;&#x3D; 0);\ncout &lt;&lt; i &lt;&lt; endl;</code></pre>\n\n<h3 id=\"判断1个数\"><a href=\"#判断1个数\" class=\"headerlink\" title=\"判断1个数\"></a>判断1个数</h3><pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">&#x2F;&#x2F;1\n\n&#x2F;&#x2F;system buildin function __builtin_popcount()\nint a &#x3D; 1234124;  \n&#x2F;&#x2F;binary expression is 100101101010011001100\ncout &lt;&lt; __builtin_popcount(a) &lt;&lt; endl;\n&#x2F;&#x2F;tht outcome is 10\n\n&#x2F;&#x2F;2\n\n&#x2F;&#x2F;use the math\n&#x2F;&#x2F;the operation i &amp; (i - 1) \nint i &#x3D; 1234124;\n&#x2F;&#x2F;binary expression is 100101101010011001100\n&#x2F;&#x2F;also i-1 is          100101101010011001011\n&#x2F;&#x2F;the the &amp; operation  100101101010011001000\n&#x2F;&#x2F;see! the last 1 is gone\nint cnt &#x3D; 0;\nwhile(i)&#123;\n    i &amp;&#x3D; (i-1);\n    cnt++;\n&#125;\ncout &lt;&lt; cnt &lt;&lt; endl;\n&#x2F;&#x2F;the outcome is 10</code></pre>","feature":true,"text":"判断-1int i &#x3D; -1; &#x2F;&#x2F; means the binary expression of i is 111111111···11 &#x2F;&#x2F; at the same time the &#39;~&#39; operation...","link":"","photos":[],"count_time":{"symbolsCount":971,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":2,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Math","slug":"Math","count":1,"path":"api/tags/Math.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD-1\"><span class=\"toc-text\">判断-1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD1%E4%B8%AA%E6%95%B0\"><span class=\"toc-text\">判断1个数</span></a></li></ol>","author":{"name":"Wakkana","slug":"blog-author","avatar":"/file/avator.jpeg","link":"/","description":"Res tantum valet quantum vendi potest.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"weibo":{"icon":"/svg/weibo.svg","link":"https://weibo.com/6962193334/profile?topnav=1&wvr=6"}}}},"mapped":true,"prev_post":{"title":"几个常见的模版","uid":"afe4f8618e63693f296fa53d89e46c0a","slug":"20210616-01","date":"2021-05-15T16:00:00.000Z","updated":"2021-08-17T05:57:24.415Z","comments":true,"path":"api/articles/20210616-01.json","keywords":null,"cover":"file/cover2.jpeg","text":" 前言 自用 质数打表void solve()&#123; int n; cin &gt;&gt; n; vector&lt;int&gt; d(n,1); for(int i &#x3D; 2; i &lt;&#x3D; n; i++)&#123; if(!d[i]) cont...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":2,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":1,"path":"api/tags/Algorithm.json"}],"author":{"name":"Wakkana","slug":"blog-author","avatar":"/file/avator.jpeg","link":"/","description":"Res tantum valet quantum vendi potest.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"weibo":{"icon":"/svg/weibo.svg","link":"https://weibo.com/6962193334/profile?topnav=1&wvr=6"}}}},"feature":true},"next_post":{}}